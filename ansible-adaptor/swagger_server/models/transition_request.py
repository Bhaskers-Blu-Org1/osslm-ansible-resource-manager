# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class TransitionRequest(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, resource_manager_id: str=None, deployment_location: str=None, resource_type: str=None, transition_name: str=None, resource_name: str=None, metric_key: str=None, context: object=None, properties: object=None):
        """
        TransitionRequest - a model defined in Swagger

        :param resource_manager_id: The resource_manager_id of this TransitionRequest.
        :type resource_manager_id: str
        :param deployment_location: The deployment_location of this TransitionRequest.
        :type deployment_location: str
        :param resource_type: The resource_type of this TransitionRequest.
        :type resource_type: str
        :param transition_name: The transition_name of this TransitionRequest.
        :type transition_name: str
        :param resource_name: The resource_name of this TransitionRequest.
        :type resource_name: str
        :param metric_key: The metric_key of this TransitionRequest.
        :type metric_key: str
        :param context: The context of this TransitionRequest.
        :type context: object
        :param properties: The properties of this TransitionRequest.
        :type properties: object
        """
        self.swagger_types = {
            'resource_manager_id': str,
            'deployment_location': str,
            'resource_type': str,
            'transition_name': str,
            'resource_name': str,
            'metric_key': str,
            'context': object,
            'properties': object
        }

        self.attribute_map = {
            'resource_manager_id': 'resourceManagerId',
            'deployment_location': 'deploymentLocation',
            'resource_type': 'resourceType',
            'transition_name': 'transitionName',
            'resource_name': 'resourceName',
            'metric_key': 'metricKey',
            'context': 'context',
            'properties': 'properties'
        }

        self._resource_manager_id = resource_manager_id
        self._deployment_location = deployment_location
        self._resource_type = resource_type
        self._transition_name = transition_name
        self._resource_name = resource_name
        self._metric_key = metric_key
        self._context = context
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt) -> 'TransitionRequest':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The transitionRequest_1 of this TransitionRequest.
        :rtype: TransitionRequest
        """
        return deserialize_model(dikt, cls)

    @property
    def resource_manager_id(self) -> str:
        """
        Gets the resource_manager_id of this TransitionRequest.

        :return: The resource_manager_id of this TransitionRequest.
        :rtype: str
        """
        return self._resource_manager_id

    @resource_manager_id.setter
    def resource_manager_id(self, resource_manager_id: str):
        """
        Sets the resource_manager_id of this TransitionRequest.

        :param resource_manager_id: The resource_manager_id of this TransitionRequest.
        :type resource_manager_id: str
        """

        self._resource_manager_id = resource_manager_id

    @property
    def deployment_location(self) -> str:
        """
        Gets the deployment_location of this TransitionRequest.

        :return: The deployment_location of this TransitionRequest.
        :rtype: str
        """
        return self._deployment_location

    @deployment_location.setter
    def deployment_location(self, deployment_location: str):
        """
        Sets the deployment_location of this TransitionRequest.

        :param deployment_location: The deployment_location of this TransitionRequest.
        :type deployment_location: str
        """

        self._deployment_location = deployment_location

    @property
    def resource_type(self) -> str:
        """
        Gets the resource_type of this TransitionRequest.

        :return: The resource_type of this TransitionRequest.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type: str):
        """
        Sets the resource_type of this TransitionRequest.

        :param resource_type: The resource_type of this TransitionRequest.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def transition_name(self) -> str:
        """
        Gets the transition_name of this TransitionRequest.

        :return: The transition_name of this TransitionRequest.
        :rtype: str
        """
        return self._transition_name

    @transition_name.setter
    def transition_name(self, transition_name: str):
        """
        Sets the transition_name of this TransitionRequest.

        :param transition_name: The transition_name of this TransitionRequest.
        :type transition_name: str
        """

        self._transition_name = transition_name

    @property
    def resource_name(self) -> str:
        """
        Gets the resource_name of this TransitionRequest.

        :return: The resource_name of this TransitionRequest.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name: str):
        """
        Sets the resource_name of this TransitionRequest.

        :param resource_name: The resource_name of this TransitionRequest.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def metric_key(self) -> str:
        """
        Gets the metric_key of this TransitionRequest.

        :return: The metric_key of this TransitionRequest.
        :rtype: str
        """
        return self._metric_key

    @metric_key.setter
    def metric_key(self, metric_key: str):
        """
        Sets the metric_key of this TransitionRequest.

        :param metric_key: The metric_key of this TransitionRequest.
        :type metric_key: str
        """

        self._metric_key = metric_key

    @property
    def context(self) -> object:
        """
        Gets the context of this TransitionRequest.

        :return: The context of this TransitionRequest.
        :rtype: object
        """
        return self._context

    @context.setter
    def context(self, context: object):
        """
        Sets the context of this TransitionRequest.

        :param context: The context of this TransitionRequest.
        :type context: object
        """

        self._context = context

    @property
    def properties(self) -> object:
        """
        Gets the properties of this TransitionRequest.

        :return: The properties of this TransitionRequest.
        :rtype: object
        """
        return self._properties

    @properties.setter
    def properties(self, properties: object):
        """
        Sets the properties of this TransitionRequest.

        :param properties: The properties of this TransitionRequest.
        :type properties: object
        """

        self._properties = properties
